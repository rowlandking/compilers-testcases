function : void main() {
    int a = 0;
    int not_array = 4;
    const int not_in_bounds = 0xE0F;

    // Type of expression referenced by array subscript (int) is not of
    // array or pointer type.
    a = a + not_array[1];

    int[10] int_10;

    // Index value of 3599 is outside legal range [0,10).
    a = a + int_10[not_in_bounds];

    // Index value of -1 is outside legal range [0,10).
    a = int_10[-1];
}

function : void multidimensional_arrays() {
    typedef int[5] INT5;
    typedef INT5[10] INT5_10;
    typedef INT5_10[4] INT5_10_4;

    int var_not_in_bounds = 0xE0F;
    INT5 int5;
    INT5_10 int5_10;
    INT5_10_4 int5_10_4;
    INT5_10* int5_10_p;
    INT5_10_4* int5_10_4_p;

    // int5_10[2] = int5_10_4[3][9]; // WNBT
    // int5_10_4[1] = int5_10_p[1];  // WNBT

    // Index value of 10 is outside legal range [0,10).
    int5_10[10][4] = int5_10_p[1][8][3];

    int5[0] = int5_10_4_p[0xE0F][3][9][4];
}

typedef int[10] INT10;

function : void fn(int[10] i10, INT10 i10_alias, INT10* I10p) {
    return;
}

function : void test_function_calls() {
    int[10] int10;

    // Argument of type int[10] not assignable to value parameter i10,
    // of type int[10].
    //
    // Argument of type int[10] not assignable to value parameter i10_alias,
    // of type INT10.
    fn(int10, int10, int10);
}