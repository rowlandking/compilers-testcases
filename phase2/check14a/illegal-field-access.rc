function : void illegal_access() {
    structdef TWO_INT_FIELDS {
        int x, y;
    };

    structdef ONE_FUNCTION {
        function : int fn() {
            return 0;
        }
    };

    TWO_INT_FIELDS two_ints;
    ONE_FUNCTION one_function;

    // Referenced field mising_field not found in type TWO_INT_FIELDS.
    int a = two_ints.missing_field;

    // Referenced field missing_field_2 not found in type TWO_INT_FIELDS.
    int b = two_ints.missing_field_2;

    // Referenced field missing_function not found in type ONE_FUNCTION.
    int c = one_function.missing_function();
}

function : void illegal_calls() {
    structdef S {
        function : int v_if_true(bool b, int v) {
            if (b) {
                return v;
            }

            return 0;
        }

        function : bool flip_b(bool b) {
            return !b;
        }

        function : float& echo_f(float& f) {
            return f;
        }
    };

    S struct_instance;

    // Argument of type int not assignable to value parameter b, of type bool.
    int a = struct_instance.v_if_true(2, 2);

    // Argument of type int not assignable to value parameter b, of type bool.
    bool b = struct_instance.flip_b(4);

    // Argument of type bool not equivalent to reference parameter f,
    // of type float.
    float f = struct_instance.echo_f(true);
}